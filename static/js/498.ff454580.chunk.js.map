{"version":3,"file":"static/js/498.ff454580.chunk.js","mappings":"sNAGMA,EAAaC,EAAAA,GAAAA,GAAH,sLAWVC,EAAgBD,EAAAA,GAAAA,GAAH,+PAYbE,EAAcF,EAAAA,GAAAA,IAAH,kFAMXG,EAAaH,EAAAA,GAAAA,EAAH,8HAOVI,GAAUJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,mE,SCAb,EA7BkB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAACT,EAAD,UACGO,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,GAAIC,EAApB,EAAoBA,MAApB,OACV,SAACX,EAAD,WACE,UAACG,EAAD,CAASS,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAA7C,WACE,SAACL,EAAD,CAAac,IAAKN,EAAaO,IAAKL,KACpC,SAACT,EAAD,UAAaS,QAHGD,EADV,OAWnB,C,iJCrBD,EAJe,WACZ,IACF,E,SCFKO,E,MAAYlB,GAAAA,IAAH,uFCyCf,EApCa,WACX,OAA4BmB,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAwBA,IAtBAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,YAAqB,QAAQC,MAAK,SAAAnB,GAChC,IAAMoB,EAAOpB,EAAOqB,QAAO,SAACC,EAAKC,GAC/BP,GAAa,GACb,IAAMQ,EAASD,EAAMnB,YAAN,8CAC4BmB,EAAMnB,aAC7CqB,EACEC,EAAO,CACXrB,GAAIkB,EAAMlB,GACVC,MAAOiB,EAAMjB,MACbqB,aAAcJ,EAAMI,aACpBvB,YAAaoB,EACbI,aAAcL,EAAMK,cAGtB,OADAZ,GAAa,GACP,GAAN,eAAWM,GAAX,CAAgBI,GACjB,GAAE,IAEHZ,EAAUM,EACX,GACF,GAAE,IAEEpB,EAEL,OACE,UAACY,EAAD,YACE,2CACCG,GAAY,SAAC,EAAD,KAAa,SAACc,EAAA,EAAD,CAAW7B,OAAQA,MAGlD,C","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Loader/Loader.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst ListMovies = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 30px;\n  flex-wrap: wrap;\n  width: 1460px;\n  justify-content: center;\n  padding: 0;\n  margin-bottom: 50px;\n`;\n\nconst ListItemMovie = styled.li`\n  border: 1px solid black;\n  overflow: hidden;\n  border-radius: 5%;\n  text-align: center;\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    box-shadow: 0px 0px 17px 5px rgba(15, 15, 15, 0.47);\n  }\n`;\n\nconst PosterMovie = styled.img`\n  display: block;\n  width: 300px;\n  min-height: 450px;\n`;\n\nconst TitleMovie = styled.p`\n  margin: 0;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  font-weight: 600;\n  font-size: 12px;\n`;\nconst LinkDiv = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n`;\n\nexport { ListMovies, ListItemMovie, PosterMovie, TitleMovie, LinkDiv };\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  ListMovies,\n  ListItemMovie,\n  PosterMovie,\n  TitleMovie,\n  LinkDiv,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ListMovies>\n        {movies.map(({ poster_path, id, title }) => (\n          <ListItemMovie key={id}>\n            <LinkDiv to={`/movies/${id}`} state={{ from: location }}>\n              <PosterMovie src={poster_path} alt={title} />\n              <TitleMovie>{title}</TitleMovie>\n            </LinkDiv>\n          </ListItemMovie>\n        ))}\n      </ListMovies>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.any.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import { InfinitySpin } from 'react-loader-spinner';\n\nconst Loader = () => {\n  <InfinitySpin width=\"200\" color=\"#674dc5\" />;\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 1460px;\n  margin: 20px auto;\n  text-align: center;\n`;\n\nexport { Container };\n","import { useState, useEffect } from 'react';\nimport MovieAPI from '../../services/apiFilms';\nimport MovieList from 'components/MovieList';\nimport holder from '../../images/holder.png';\nimport Loader from 'components/Loader';\nimport { Container } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    MovieAPI.getTrending('week').then(movies => {\n      const info = movies.reduce((acc, movie) => {\n        setIsLoading(true);\n        const poster = movie.poster_path\n          ? `https://image.tmdb.org/t/p/original/${movie.poster_path}`\n          : holder;\n        const film = {\n          id: movie.id,\n          title: movie.title,\n          release_date: movie.release_date,\n          poster_path: poster,\n          vote_average: movie.vote_average,\n        };\n        setIsLoading(false);\n        return [...acc, film];\n      }, []);\n\n      setMovies(info);\n    });\n  }, []);\n\n  if (!movies) return;\n\n  return (\n    <Container>\n      <h1>Trending today</h1>\n      {isLoading ? <Loader /> : <MovieList movies={movies} />}\n    </Container>\n  );\n};\n\nexport default Home;\n"],"names":["ListMovies","styled","ListItemMovie","PosterMovie","TitleMovie","LinkDiv","NavLink","movies","location","useLocation","map","poster_path","id","title","to","state","from","src","alt","Container","useState","setMovies","isLoading","setIsLoading","useEffect","MovieAPI","then","info","reduce","acc","movie","poster","holder","film","release_date","vote_average","MovieList"],"sourceRoot":""}