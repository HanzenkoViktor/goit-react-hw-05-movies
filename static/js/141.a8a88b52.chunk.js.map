{"version":3,"file":"static/js/141.a8a88b52.chunk.js","mappings":"sNAGMA,EAAaC,EAAAA,GAAAA,GAAH,sLAWVC,EAAgBD,EAAAA,GAAAA,GAAH,+PAYbE,EAAcF,EAAAA,GAAAA,IAAH,kFAMXG,EAAaH,EAAAA,GAAAA,EAAH,8HAOVI,GAAUJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,mE,SCAb,EA7BkB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAACT,EAAD,UACGO,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,GAAIC,EAApB,EAAoBA,MAApB,OACV,SAACX,EAAD,WACE,UAACG,EAAD,CAASS,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAA7C,WACE,SAACL,EAAD,CAAac,IAAKN,EAAaO,IAAKL,KACpC,SAACT,EAAD,UAAaS,QAHGD,EADV,OAWnB,C,sKCzBKO,EAAYlB,EAAAA,GAAAA,IAAH,uFAKTmB,EAAMnB,EAAAA,GAAAA,OAAH,6fAsBHoB,EAAapB,EAAAA,GAAAA,KAAH,iFAMVqB,EAAQrB,EAAAA,GAAAA,MAAH,0jB,SCkCX,EA7De,WAAO,IAAD,EACnB,GAA4BsB,EAAAA,EAAAA,UAAS,MAArC,eAAOhB,EAAP,KAAeiB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,YAEfC,EAAAA,EAAAA,YAAU,WACHF,GAELG,EAAAA,EAAAA,YAAqBH,GAAWI,MAAK,SAAAzB,GACnC,IAAM0B,EAAO1B,EAAO2B,QAAO,SAACC,EAAKC,GAC/B,IAAMC,EAASD,EAAMzB,YAAN,8CAC4ByB,EAAMzB,aAC7C2B,EACEC,EAAO,CACX3B,GAAIwB,EAAMxB,GACVC,MAAOuB,EAAMvB,MACb2B,aAAcJ,EAAMI,aACpB7B,YAAa0B,EACbI,aAAcL,EAAMK,cAEtB,MAAM,GAAN,eAAWN,GAAX,CAAgBI,GACjB,GAAE,IAEHf,EAAUS,EACX,GACF,GAAE,CAACL,IAUJ,OACE,2BACE,UAACT,EAAD,YACE,UAACE,EAAD,CAAYqB,SAXG,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAcF,EAAMG,OAAOC,SAASC,MAAMC,MAEhDtB,EAAgB,CAAEqB,MAAOH,GAC1B,EAKK,WACE,SAACzB,EAAD,CAAK8B,KAAK,SAAV,UACE,SAAC,MAAD,OAEF,SAAC5B,EAAD,CACE4B,KAAK,OACLC,KAAK,QACLC,YAAY,eACZH,MAAOvB,EAAasB,WAGtBzC,EAEoB,IAAlBA,EAAO8C,QACT,yEAEA,SAACC,EAAA,EAAD,CAAW/C,OAAQA,KAJnB,wFAST,C","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst ListMovies = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 30px;\n  flex-wrap: wrap;\n  width: 1460px;\n  justify-content: center;\n  padding: 0;\n  margin-bottom: 50px;\n`;\n\nconst ListItemMovie = styled.li`\n  border: 1px solid black;\n  overflow: hidden;\n  border-radius: 5%;\n  text-align: center;\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    box-shadow: 0px 0px 17px 5px rgba(15, 15, 15, 0.47);\n  }\n`;\n\nconst PosterMovie = styled.img`\n  display: block;\n  width: 300px;\n  min-height: 450px;\n`;\n\nconst TitleMovie = styled.p`\n  margin: 0;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  font-weight: 600;\n  font-size: 12px;\n`;\nconst LinkDiv = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n`;\n\nexport { ListMovies, ListItemMovie, PosterMovie, TitleMovie, LinkDiv };\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  ListMovies,\n  ListItemMovie,\n  PosterMovie,\n  TitleMovie,\n  LinkDiv,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ListMovies>\n        {movies.map(({ poster_path, id, title }) => (\n          <ListItemMovie key={id}>\n            <LinkDiv to={`/movies/${id}`} state={{ from: location }}>\n              <PosterMovie src={poster_path} alt={title} />\n              <TitleMovie>{title}</TitleMovie>\n            </LinkDiv>\n          </ListItemMovie>\n        ))}\n      </ListMovies>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.any.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 1460px;\n  margin: 20px auto;\n  text-align: center;\n`;\nconst Btn = styled.button`\n  display: inline-block;\n  position: relative;\n  color: #a9a9a9;\n  text-align: center;\n  vertical-align: baseline;\n  cursor: pointer;\n  user-select: none;\n  background-color: #fff;\n  border: 1px solid #bdbdbd;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  border-radius: 0.25rem;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right: 0;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:focus,\n  &:hover {\n    color: red;\n  }\n`;\nconst FormSearch = styled.form`\n  display: flex;\n  width: 400px;\n  margin: 20px auto;\n`;\n\nconst Input = styled.input`\n  display: block;\n  outline: none;\n  position: relative;\n  z-index: 2;\n  width: 100%;\n  height: 20px;\n  padding: 0.375rem 0.75rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  border: 1px solid #bdbdbd;\n  border-left: 0;\n  border-radius: 0.25rem;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:focus,\n  &:hover {\n    border: 1px solid red;\n    outline: none;\n  }\n`;\n\nexport { Container, Btn, FormSearch, Input };\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { GoSearch } from 'react-icons/go';\nimport MovieAPI from '../../services/apiFilms';\nimport MovieList from 'components/MovieList';\nimport holder from '../../images/holder.png';\nimport { Container, Btn, FormSearch, Input } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const movieName = searchParams.get('query') ?? ``;\n\n  useEffect(() => {\n    if (!movieName) return;\n\n    MovieAPI.searchMovie(movieName).then(movies => {\n      const info = movies.reduce((acc, movie) => {\n        const poster = movie.poster_path\n          ? `https://image.tmdb.org/t/p/original/${movie.poster_path}`\n          : holder;\n        const film = {\n          id: movie.id,\n          title: movie.title,\n          release_date: movie.release_date,\n          poster_path: poster,\n          vote_average: movie.vote_average,\n        };\n        return [...acc, film];\n      }, []);\n\n      setMovies(info);\n    });\n  }, [movieName]);\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    const searchQuery = event.target.elements.query.value;\n\n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <main>\n      <Container>\n        <FormSearch onSubmit={onFormSubmit}>\n          <Btn type=\"submit\">\n            <GoSearch />\n          </Btn>\n          <Input\n            type=\"text\"\n            name=\"query\"\n            placeholder=\"Search films\"\n            value={searchParams.query}\n          />\n        </FormSearch>\n        {!movies ? (\n          <p>Enter a request to get the movies you are interested in.</p>\n        ) : movies.length === 0 ? (\n          <p>We did not find any movies for your request.</p>\n        ) : (\n          <MovieList movies={movies} />\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["ListMovies","styled","ListItemMovie","PosterMovie","TitleMovie","LinkDiv","NavLink","movies","location","useLocation","map","poster_path","id","title","to","state","from","src","alt","Container","Btn","FormSearch","Input","useState","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","MovieAPI","then","info","reduce","acc","movie","poster","holder","film","release_date","vote_average","onSubmit","event","preventDefault","searchQuery","target","elements","query","value","type","name","placeholder","length","MovieList"],"sourceRoot":""}